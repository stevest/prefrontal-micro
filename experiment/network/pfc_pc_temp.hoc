/* 4-compartment model of a deep layer PFC pyramidal cell */
/* from Durstewitz et al. (2000), J.Neurophysiol. 83: 1733-50 */
//strdef PATH,EXEC_CMD
//PATH = "/home/cluster/stefanos/Documents/GitHub/prefrontal-micro/experiment/network/"
begintemplate PCcell

objref all, somatic, axonal, basal, apical

public all, somatic, axonal, basal, apical, soma, axon, dend, apic
public gid
public ApicNo, DendNo //OBJECT: properties of the cell

create 	soma,dend[1], axon, apic[2]  //dend[0]=basal, dend[1]=proximal, dend[2]=distal

proc init() {


//OBJECT: properties of the cell
//MUST BE INITIALIZED !!!
ApicNo=0
DendNo=0

create 	soma,dend

gCAN=0//0.001
soma{
	nseg=1
	L=75//80
	diam=10.14  /* L and diam chosen to match surface area and internal*/
		    /*  resistance with a sphere of diam 23 microns */
	//insert kdyn
	insert pas
      	cm = 1.2         /* microF/cm2 */
	g_pas = 6e-5   /* mho/cm2 */    
	e_pas = -66
	Ra = 100         /* ohm-cm */

	insert Naf
	gnafbar_Naf =  0.108  *1.675

	insert nap
	gnabar_nap =  1.8e-06 

	insert cal
	gcalbar_cal =  3e-05

	insert can
	gcabar_can = 2e-5 

	insert car
	gcabar_car = 3e-08 *1000

	insert cat
	gcatbar_cat =  6e-06 

	insert kdr
	gkdrbar_kdr =  0.0054*4		 //*3 //SSS

	insert IKs
	gKsbar_IKs = 6e-4 *1.71		*0.5// SSS //2.1

	insert kad
	gkabar_kad = 7e-4 

	insert iC
	gkcbar_iC = 2.2e-3		//*10 //SSS 

	insert h 
	gbar_h =   9e-06 *0.8		//*0.1//SSS
	
	insert kca
	gbar_kca = 0.025 *5.6		//*1.02 //SSS 

	insert ican
	gbar_ican=gCAN

	insert cadyn
}

//Dendritic_factors

dend{
	//basal dendrites
	nseg=1//9 //changed to 5 segments to accommodate uniformly spreaded synapses
	L=150
	diam=1 
	insert pas
      	cm = 2         		/* microF/cm2 */
	g_pas =1.7e-04     	/* mho/cm2 */    
	e_pas = -66
	Ra = 100           	/* ohm-cm */

	insert Naf
	gnafbar_Naf = 1.8e-3 

	insert nap
	gnabar_nap = 1.8e-05 

        insert can
	gcabar_can = 6e-05 
	
	insert kdr
	gkdrbar_kdr = 0.0054		//*15//SSS 

	insert IKs
	gKsbar_IKs =  0.0006		//*0.1//SSS
	
	insert kad
	gkabar_kad = 0.0007

	insert h
	gbar_h =9e-06		//*0.1//SSS 

	insert ican
	gbar_ican=gCAN*0.1

	insert cadyn
}

connect dend(0), soma(0)

cao0_ca_ion = 2 	/* mM */
cai0_ca_ion = 50e-6  	/* mM */
ko0_k_ion = 3.82 	/* mM */
ki0_k_ion = 140   	/* mM */
celsius   = 34

//proc subsets:

all = new SectionList()
somatic = new SectionList()
basal = new SectionList()

soma all.append()
dend all.append()

soma somatic.append()
dend basal.append()

} //End proc init()

endtemplate PCcell

objref PCcells, PCgids
PCcells=new List()
PCgids=new Vector()

proc createPyrs(){ local i,host,gid localobj cell,mynil
	if(PARALLEL){
		{PC.barrier()}
		if(PC.id==0) {printf("initializing PCs...\n") }     
		for i=0, nPCcells-1{ //(i=PC.id;i<nPcells;i+=PC.nhost) { 
			host=i%PC.nhost
			gid=ind2gid(i,0)
			if(host==PC.id){
				PCgids.append(gid)
				cell = new PCcell()
				PC.set_gid2node(gid,PC.id)
				cell.soma {//synapse_source(gid)//,&v(1))
					PC.cell(gid,new NetCon(&v(1), mynil),1)
				}  
				PC.threshold(gid,-20)          
				PCcells.append(cell)  
			}    
		}
	}else{
		for i = 0, (nPCcells-1) {
			cell = new PCcell()
			PCcells.append(cell) 
			PCgids.append(i)
		}
	}

}

createPyrs()


//Create a list with segments for all neurons
objref PCsoma_list, PCbasal_list, PCapical_list, PCdend_list, PCcell_list, cell0_list
objref proxi_list[nPCcells], dist_list[nPCcells]

PCsoma_list = new SectionList()
PCbasal_list = new SectionList()
PCdend_list = new SectionList()
PCcell_list = new SectionList()
cell0_list=new SectionList()

for i=0, PCcells.count()-1 {

	PCcells.o(i).soma PCsoma_list.append()
	PCcells.o(i).DendNo=1
	PCcells.o(i).basal
	PCbasal_list.append()  
	PCdend_list.append()


	forsec PCcells.o(i).all {
		PCcell_list.append()
	}
}

//printf("Applying PC current balance\n")
//if(SIMPLIFIED){
	//xopen("../simplified/current-balance.hoc")
//} else {
{sprint(EXEC_CMD,"{xopen(\"%s../../lib/current-balance.hoc\")}",PATH)}
assert(execute1(EXEC_CMD))
//	assert(xopen ("../../lib/current-balance.hoc"))
//}
{current_balance(v_init)}

