
strdef savefilename
proc save_membrane_voltage()  { local i 
	for (i=0;i<nPCcells;i=i+1) {
		vsoma[i] = new File()		
		sprint(savefilename,"experiment_%d/%s/%d_%d_%d.txt", $3,EXP,$2,i, runs) 
		vsoma.wopen(savefilename)
		for sb=0, volt.size()-1 { 
			vsoma.printf ("%f\n",volt[i].x[sb])
		}
		vsoma.close()
	}
}


proc save_synaptic_locations_PCrec(){ local fh localobj vfilePC

 print " about to save synaptic locations"
         //save PC2PC synaptic locations
         for trg=0, PCcells.count()-1 {
                 for src=0, nPCcells-1 {
                         if (connMatrix.x[ind2gid(src,0)][PCgids.x[trg]]) {
                                 vfilePC = new File()
                                 sprint(vfilePC_filename,"%s/%s/PID_PC2PC_src_%d_trg_%d_runs_%d.txt", $s1,EXP,src,PCgids.x[trg],runs)
                                 vfilePC.wopen(vfilePC_filename)

                                 for src=0, nPCcells-1 {
                                         if (connMatrix.x[ind2gid(src,0)][PCgids.x[trg]]) {
                                                 if(PCgids.x[trg]){	
                                                         vfilePC.printf("%d %d",src,PCgids.x[trg])
                                                         pidPC2PC[src][PCgids.x[trg]].printf(vfilePC,"%8.4f")
                                                         //vfilePC.printf("%d",123)

                                                 }
                                         }
                                 }

                                 vfilePC.close()
                         }
                 }
         }


 }

 proc save_stimulation_locations_PCrec(){ local fh localobj vfilePC

         strdef ext
         if ($4) {
         ext = "bin"
         } else {
         ext = "txt"
         }
         //save PC2PC synaptic locations
         for trg=0, PCcells.count()-1 {
 print "is stim ", PcellStimList.x(PCgids.x[trg])
                 if(PcellStimList.x(PCgids.x[trg])){
                         vfilePC = new File()
                         sprint(vfilePC_filename,"%s/%s/stimPID_PC2PC_trg_%d_runs_%d.%s", $s1,EXP,PCgids.x[trg],runs,ext)
                         vfilePC.wopen(vfilePC_filename)
                         fh = vfilePC.isopen()
                         while (!fh) {
                                 vfilePC.wopen(vfilePC_filename)
                                 fh = vfilePC.isopen()
                         }
                         if(DEBUG){print "New file .isopen() =  ",fh}
                         //              if(PCgids.x[trg]){
                                         //print "Should save synapse location!"
                                         //for syn = 0, (PC2PC_MaxSyn-1) {
                                         //print "PDgids trg contains ", PCgids.x[trg]
                                         //print "SRC contains ", src
                                         //print "PID length ", pidPC2PC[src][PCgids.x[trg]].size()
                                                 //vfilePC.printf("%d %d",src,PCgids.x[trg])
                                                 stimpidPC2PC[PCgids.x[trg]].printf(vfilePC,"%8.4f\n")
                                                 //vfilePC.printf("%d",123)
                                         //}
                                         //}

                         vfilePC.close()
                 }
         }


 }

proc save_synaptic_delays(){local i,s,q  localobj vfilePC// Record GID

strdef ext
if ($4) {
	ext = "bin"
} else {
	ext = "txt"
}
//save PV2PC delays
	/*for trg=0, PCcells.count()-1 {
		vfilePC = new File()	
		sprint(vfilePC_filename,"%s/%s/delayPV2PC_trg_%d_runs_%d.txt", $s1,EXP,PCgids.x[trg],runs) 
		vfilePC.wopen(vfilePC_filename)
		for src=0, nPVcells-1 {
			if (connMatrix.x[ind2gid(src,1)][PCgids.x[trg]]) {
				vfilePC.printf("%d %d",src,PCgids.x[trg])
				delayPV2PC[src][PCgids.x[trg]].printf(vfilePC,"%8.4f")
			}
		}
		
		vfilePC.close()
	}*/
//save PC2PC delays
	for trg=0, PCcells.count()-1 {
		vfilePC = new File()	
		sprint(vfilePC_filename,"%s/%s/delayPC2PC_trg_%d_runs_%d.txt", $s1,EXP,PCgids.x[trg],runs) 
		vfilePC.wopen(vfilePC_filename)
		for src=0, nPCcells-1 {
			if (connMatrix.x[ind2gid(src,0)][PCgids.x[trg]]) { vfilePC.printf("%d %d",src,PCgids.x[trg])
				delayPC2PC[src][PCgids.x[trg]].printf(vfilePC,"%8.4f")
			}
		}
		
		vfilePC.close()
	}
}


