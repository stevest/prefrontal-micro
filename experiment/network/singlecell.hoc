//Create a single cell and measure things:
// stamatiad.st@gmail.com

inittime=startsw()
{load_file("/home/cluster/stefanos/Libraries/nrn/share/nrn/lib/hoc/stdrun.hoc")}

steps_per_ms=10
dt=1/steps_per_ms
n=int(tstop/dt)
celsius=34

objref r_msec
r_msec = new Vector(n)
for k=0,n-1 {r_msec.x[k] = k*dt }
tstop = 50000 
nPCcells = 1

v_init = -66 
objref cv, vc, ic[10]
cv=new CVode(0)

if(cv.active(0)){print "ERRORRRR!"}	     //Do NOT use CVODE solver!
if(!cv.use_long_double(1)){print "ERRORRRR!"}//was cvode
if(!cv.cache_efficient(1)){print "ERRORRRR!"}


//overwrite with NASSI's values:
//-------------------Set synaptic weights
ampaweightpr=	0.00024			//Initial stimulus
nmdaweightpr=	0.22			//Initial stimulus
ampaweight=	0.00019		//According to Wang(2008)
gabaweight=	0.00083//XENIA GABAa //6.9e-4 			//According to Woo(2007)
gabaweightb=1.05e-4
ampaweightin=	7.5e-4			//according to Wang,Gao,2009
nmdaweightin=	3.2e-4			//ratio inmda/iampa for interneuron *0.5(Wang,Gao,2009)
autogabaweight=	0.006205				//According to Bacci (2003) 
PC2PV_MaxSyn = 4 //7is the June working
PV2PC_MaxSyn = 3 //SSS //NEW DATA: 1Soma Strong, 2Dend more distal weak, Kubota, eLife, 2015. ALWAYS ON SOMA AND ONE! CHANGE WEIGHT TO CHANGE # SYNAPSES! //4 is the June working //SSS 8elw ligotero GABAa!! 
//------------------Set # of synapses
synapses_backb=300//16//18//60//100
synapses_backpr=300//16//18//60//100
synapses_backa=300//16//18//60//100
synapses_backinh=500
synapses_inh=1


Stim_MaxSyn_apic = 25 //synapses sto meeting 27/4/15,,,//40//27//90			//initial stimulation
Stim_MaxSyn_basal=0//120	//initial stimulation

gabaweight_pv2pc_a = gabaweight    //3.8// GABA gia to RAND connectivity //OVERRIDED!!
gabaweight_pv2pc_b = gabaweightb   *0.1//0.2//0.1//*0.1 is the June working //*0.4//SSS //3.8// GABA gia to RAND connectivity //OVERRIDED!!

/*nmdaweights.x[0]=0.25		//1.1 ratio //NASSI
nmdaweights.x[1]=0.35		//1.5
nmdaweights.x[2]=0.47		//1.9
nmdaweights.x[3]=0.585		//2.3*/
nmdaweight = 0.585
//ampaweight=	0.00019	//NASSI
taur_cad = 50//36 //SSS
xopen("../../lib/basic-graphics.hoc")
xopen("../define_objects.hoc")
xopen("pfc_pc_temp.hoc")

// stimulate pyramidal:
objref ns

ns = new NetStim(0.5)
ns.interval=50
ns.number = 1000
ns.start = 0
ns.noise =1 

objref ampapr[Stim_MaxSyn_apic], nmdapr[Stim_MaxSyn_apic]
objref ncampapr[Stim_MaxSyn_apic], ncnmdapr[Stim_MaxSyn_apic]
objref r
r = new Random(0)
r.uniform(0,1)
for i=0,Stim_MaxSyn_apic-1{
	PID = r.repick()
	pyramidal.dend[0] {ampapr[i] = new GLU(PID)}
	pyramidal.dend[0] {nmdapr[i] = new nmda_segev(PID)}
	ncampapr[i] = new NetCon(ns, ampapr[i])
	ncampapr[i].delay = 100
	ncampapr[i].weight = ampaweightpr
	ncampapr[i].threshold = -10
	ncnmdapr[i] = new NetCon(ns, nmdapr[i])
	ncnmdapr[i].delay = 100
	ncnmdapr[i].weight = nmdaweightpr
	ncnmdapr[i].threshold = -10
}

//
addgraph_2("pyramidal.soma.v(0.5)",0,tstop,-70,50)
addgraph_2("nmdapr[0].inmda",0,tstop,-0.009,0.009)

objref volt, rinmda[Stim_MaxSyn_apic]
strdef filename
objref vfile
proc rec_membrane_voltage(){ 
	volt=new Vector(n)
	pyramidal.soma cv.record(&v(.5),volt,r_msec,1) 
}
proc save_membrane_voltage(){
	vfile = new File()
	vfile.wopen("vsoma.txt")
	volt.printf(vfile,"%8.4f\n")	
}
proc rec_all_inmda(){ local i
	for i=0, Stim_MaxSyn_apic-1{
		rinmda[i] = new Vector(n)
		rinmda[i].record(&nmdapr[i].inmda)
	}
}
proc save_all_inmda(){ local i
	for i=0, Stim_MaxSyn_apic-1{
		vfile = new File()
		sprint(filename,"inmda_%03d.txt",i) 
		vfile.wopen(filename)
		rinmda[i].printf(vfile, "%8.4f\n")
	}
}
rec_membrane_voltage()
rec_all_inmda()
runtime=startsw()
run()
runtime = startsw() - runtime
printf("Runtime: %10.4g\n", runtime)
save_membrane_voltage()
save_all_inmda()


