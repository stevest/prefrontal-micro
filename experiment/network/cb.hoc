//Interneuron for PFV - Calbindin/LTS interneuron
//Based on Durstewitz and Gabriel 2006
//"Irregular spiking in NMDA-driven prefrontal cortex neurons"


begintemplate CBcell
external PARALLEL

public position, x, y, z
public soma, axon, dend, gid

create soma, axon, dend

proc position() { local i // taken from Migliore 2010
  soma for i = 0, n3d()-1 {
    pt3dchange(i, $1-x+x3d(i), $2-y+y3d(i), $3-z+z3d(i), diam3d(i))
  }
  x = $1  y = $2  z = $3
}


proc init () {
if(PARALLEL){gid=$1}
x = y = z = 0 // only change via position

create soma, axon, dend

soma_nafcb=0.075 //0.018 (Fast Na+ channel, added the 's' attenuation system from hha2.mod)
soma_kdrcb=0.018 //0.018//0.09 (Delayed rectifier K+ channel)
soma_Kslowcb=0.000725*0//0.4315//0.000725 (to krataw miden simfwna me anafora Toledo-Rodriguez, 2004 gia ta cluster)
soma_hcb=0.000002 //0.000025 // (H-current that uses Na ions)
soma_kapcb=0.007*5 //0.007 // (K-A channel)
soma_iCcb=0.00001*0 //(to krataw miden  simfwna me anafora Toledo-Rodriguez, 2004 gia ta cluster)
soma_calcb=100*0//(to krataw miden simfwna me anafora Toledo-Rodriguez, 2004 gia ta cluster)
soma_catcb=0.003 // (t-type calcium channel with low threshold for activation used in somatic and dendritic regions)

soma {
     nseg=1
     L=42 //10 //(15.5+-2.5-Kawaguchi k Kubota, 1993)
     diam=42 //13 (11+-1.7 - Kawaguchi k Kubota, 1993)


	//insert kdyn
	insert pas
	cm=1.2            //microF/cm2
	g_pas =1/40000//(klairy)1/58000//1/14000//mho/cm2   (oso anevazw ton paranomasti anevainei to input resistance)
	e_pas = v_initcb//(Kawaguchi k Kubota, 1993 --> -73+-3.9)
	v_initcb= -64
	Ra=150 



     insert Nafx
     gnafbar_Nafx= soma_nafcb

     insert kdrcb //delayed rectifier potassium current
     gkdrbar_kdrcb= soma_kdrcb

     insert IKscb	//slowly inactivating potassium (D-type?)
     gKsbar_IKscb= soma_Kslowcb

     insert hcb
     gbar_hcb= soma_hcb

     insert kapcb
     gkabar_kapcb= soma_kapcb

     insert iCcb //fast Ca2+/V-dependent K+ channel
     gkcbar_iCcb= soma_iCcb

     insert calcb
     gcalbar_calcb= soma_calcb 

     insert catcb
     gcatbar_catcb=soma_catcb

     insert cadyn
}

axon {
	nseg=1
	L=113.22 //(horizontal axonal spread 710+-210 Kawaguchi, 1993)
	diam=1.1

	//insert kdyn
	insert pas
	cm=1.2            //microF/cm2
	g_pas =1/40000//1/14000//mho/cm2   (oso anevazw ton paranomasti anevainei to input resistance)
	e_pas = v_initcb//(Kawaguchi k Kubota, 1993 --> -73+-3.9)
	v_initcb= -64
	Ra=150 
	
	insert Nafx
	gnafbar_Nafx= soma_nafcb*10

	insert kdrcb
	gkdrbar_kdrcb= soma_kdrcb*0.5
}

dend {
	nseg=1
	L=22
	diam=7


	//insert kdyn
	insert pas
	cm=1.2            //microF/cm2
	g_pas =1/40000//1/14000//mho/cm2   (oso anevazw ton paranomasti anevainei to input resistance)
	e_pas = v_initcb//(Kawaguchi k Kubota, 1993 --> -73+-3.9)
	v_initcb= -64
	Ra=150 
	
	insert Nafx
	gnafbar_Nafx=0.018

	insert kdrcb
	gkdrbar_kdrcb=0.018*0.5

  	insert kapcb
     	gkabar_kapcb=0.00875


}

	ko0_k_ion = 3.82   //mM
 	ki0_k_ion = 140    //mM
	//celsius   = 23 it is necessary? when different than initial -> different results than the parallel
	connect axon(0), soma(0.5)
	connect dend(0), soma(0)
	
 	//xopen("../bash_templates/current-balancecb.hoc")
	//current_balancecb(v_initcb)  
}

endtemplate CBcell

//Creating new interneurons
objref CBcells, CBgids
CBcells = new List() 
CBgids=new Vector()
proc createCBs(){local i,gid_offset localobj cell,mynil
	if(PARALLEL){
		{PC.barrier()}
		  if(PC.id==0) {printf("initializing CBs...\n")   }   
		    for i=0,nCBcells-1{ //(i=PC.id;i<nPcells;i+=PC.nhost) { 
		      host=i%PC.nhost
		      gid=ind2gid(i,2)
		     
		      if(host==PC.id){
			 CBgids.append(gid)
			cell = new CBcell(gid)
			//cell.position((i+.5)*len/nCBcells, -100, 0)  // equal spacing of interneurons. Ignores clustering effects     
			PC.set_gid2node(gid,PC.id)
			cell.axon {//synapse_source(gid)//,&v(1))
			  PC.cell(gid,new NetCon(&v(1), mynil),1)
			}   
			PC.threshold(gid,-20) 
			CBcells.append(cell)
		      }    
		  }
	}else{
		for i = 0, nCBcells-1 {
			cell = new CBcell()
			CBcells.append(cell)
			CBgids.append(i)
		}
	}
}

createCBs()

//Create list with segments
objref CBsoma_list, CBcell_list
CBsoma_list = new SectionList()
CBcell_list = new SectionList()

for i=0,CBcells.count()-1{
	CBcells.o(i).soma CBsoma_list.append()
	CBcells.o(i).soma CBcell_list.append()
	CBcells.o(i).axon CBcell_list.append()
	CBcells.o(i).dend CBcell_list.append()
}

{xopen("../../lib/current-balanceCB.hoc")}
{current_balanceCB(-64) } 
