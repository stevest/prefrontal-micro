//objref cuminmdaPC2PC[nPCcells][nPCcells]
objref cuminmdaPC2PC[nPCcells]
objref cumiampaPC2PC[nPCcells]
objref cumnmdaAPC2PC[nPCcells]
objref cumnmdaAEdge[nPCcells][nPCcells]
proc par_save_dend_inmda(){local i,s,q,k,srcPC,trgPC  localobj vfilePC,tmpvect,ninmda, Wvect

	for trg=0, nPCcells-1 {
		trgPC = ind2gid(trg,0)
		//Make sure that if for some reason syncurrent Vect is empty/nonexistent, things will continue:
		if (PC.gid_exists(trgPC)) {
			cuminmdaPC2PC[trgPC] = new Vector(n,0)
			cumiampaPC2PC[trgPC] = new Vector(n,0)
			//cumnmdaAPC2PC[trgPC] = new Vector(n,0)
			Wvect = new Vector()
	/*
			vfilePC = new File()	
			sprint(vfilePC_filename,"%s/nmdaA_dend_%03d.txt", $s1, trgPC) 
			vfilePC.wopen(vfilePC_filename)
	*/
			for src=0, nPCcells-1 {
				srcPC = ind2gid(src,0)
				//Make sure that if for some reason syncurrent Vect is empty/nonexistent, things will continue:
				if (object_id(inmdaPC2PC[srcPC][trgPC][0])) {
					//Wvect.append(W.x[srcPC][trgPC])
					for syn=0, PC2PC_MaxSyn-1 {// for all target neurons on this node
						//print "inmda vector min=",inmdaPC2PC[srcPC][trgPC][syn].min() 
						for k = 0, n-1{
							cuminmdaPC2PC[trgPC].x[k] = cuminmdaPC2PC[trgPC].x[k] + inmdaPC2PC[srcPC][trgPC][syn].x[k] //* W.x[srcPC][trgPC])
							//cumnmdaAPC2PC[trgPC].x[k] = cumnmdaAPC2PC[trgPC].x[k] + nmdaAPC2PC[srcPC][trgPC][syn].x[k]
						}
						//nmdaAPC2PC[srcPC][trgPC][syn].printf(vfilePC,"%8.4f\n")
					}
					for syn=0, PC2PC_MaxSyn-1 {// for all target neurons on this node
						for k = 0, n-1{
							cumiampaPC2PC[trgPC].x[k] = cumiampaPC2PC[trgPC].x[k] + iampaPC2PC[srcPC][trgPC][syn].x[k] //* W.x[srcPC][trgPC])
						}
					}
	if(0){ // Save iNMDA for each cell separately:
					cumnmdaAEdge[srcPC][trgPC] = new Vector(n,0)
					for syn=0, PC2PC_MaxSyn-1 {// for all target neurons on this node
						for k = 0, n-1{
							cumnmdaAEdge[srcPC][trgPC].x[k] = cumnmdaAEdge[srcPC][trgPC].x[k] + nmdaAPC2PC[srcPC][trgPC][syn].x[k]
						}
					}
					vfilePC = new File()	
					sprint(vfilePC_filename,"%s/nmdaA_src_%03d_trg_%03d.txt", $s1,srcPC, trgPC) 
					vfilePC.wopen(vfilePC_filename)
					cumnmdaAEdge[srcPC][trgPC].printf(vfilePC,"%8.4f\n")
					vfilePC.close()
	}				
				}
			}
			//vfilePC.close()

			//if( Wvect.sum() != 0){
				//print "trg=",trgPC," Wvect.sum=",Wvect.sum()
				//for k = 0, n-1{
					//cuminmdaPC2PC[trgPC].x[k]// /= Wvect.sum()
				//}	
				vfilePC = new File()	
				sprint(vfilePC_filename,"%s/inmda_dend_%03d.txt", $s1, trgPC) 
				vfilePC.wopen(vfilePC_filename)
				cuminmdaPC2PC[trgPC].printf(vfilePC,"%8.4f\n")
				vfilePC.close()
				//print "trg=",trgPC," Wvect.sum=",Wvect.sum()
				//for k = 0, n-1{
					//cumiampaPC2PC[trgPC].x[k] // /= Wvect.sum()
				//}	
				vfilePC = new File()	
				sprint(vfilePC_filename,"%s/iampa_dend_%03d.txt", $s1, trgPC) 
				vfilePC.wopen(vfilePC_filename)
				cumiampaPC2PC[trgPC].printf(vfilePC,"%8.4f\n")
				vfilePC.close()

	/*
				vfilePC = new File()	
				sprint(vfilePC_filename,"%s/nmdaA_dend_%03d.txt", $s1, trgPC) 
				vfilePC.wopen(vfilePC_filename)
				cumnmdaAPC2PC[trgPC].printf(vfilePC,"%8.4f\n")
				vfilePC.close()
	*/
			//}
		} //if target cell belongs to this node
	}
}

